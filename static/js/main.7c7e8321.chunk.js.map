{"version":3,"sources":["Clock.tsx","App.tsx","index.tsx"],"names":["Clock","state","today","Date","clockId","this","window","setInterval","setState","console","info","toUTCString","slice","clearInterval","currentTime","clockName","props","className","Component","getRandomName","value","now","toString","App","hasClock","timerId","handleTimerOpening","handleTimerClosing","event","preventDefault","document","addEventListener","_prevProps","prevState","debug","removeEventListener","ReactDOM","render","getElementById"],"mappings":"6MASaA,EAAb,4MACEC,MAAQ,CACNC,MAAO,IAAIC,MAFf,EAKEC,QAAyB,KAL3B,uDAOE,WAAqB,IAAD,OAClBC,KAAKD,QAAUE,OAAOC,aAAY,WAChC,EAAKC,SAAS,CAAEN,MAAO,IAAIC,OAG3BM,QAAQC,KAAK,EAAKT,MAAMC,MAAMS,cAAcC,OAAO,IAAK,MACvD,OAbP,kCAgBE,WACE,IAAQR,EAAYC,KAAZD,QAEQ,OAAZA,IACFE,OAAOO,cAAcT,GAErBC,KAAKD,QAAU,QAtBrB,oBA0BE,WACE,IAAMU,EAAcT,KAAKJ,MAAMC,MAAMS,cAAcC,OAAO,IAAK,GACvDG,EAAcV,KAAKW,MAAnBD,UAER,OACE,sBAAKE,UAAU,QAAf,UACE,wBAAQA,UAAU,cAAlB,SACGF,IAGF,YAED,sBAAME,UAAU,cAAhB,SACGH,WAvCX,GAA2BI,aCA3B,SAASC,IACP,IAAMC,EAAQjB,KAAKkB,MAAMC,WAAWV,OAAO,GAE3C,MAAM,SAAN,OAAgBQ,GAGX,IAAMG,EAAb,4MACEtB,MAAQ,CACNuB,UAAU,EACVT,UAAW,WAHf,EAMEU,QAAyB,KAN3B,EAqCEC,mBAAqB,WACnB,EAAKlB,SAAS,CAAEgB,UAAU,KAtC9B,EAyCEG,mBAAqB,SAACC,GACpBA,EAAMC,iBAEN,EAAKrB,SAAS,CAAEgB,UAAU,KA5C9B,uDAQE,WAAqB,IAAD,OAClBnB,KAAKoB,QAAUnB,OAAOC,aAAY,WAChC,EAAKC,SAAS,CAAEO,UAAWI,QAC1B,MAEHW,SAASC,iBAAiB,QAAS1B,KAAKqB,oBACxCI,SAASC,iBAAiB,cAAe1B,KAAKsB,sBAdlD,gCAiBE,SAAmBK,EAAmBC,GACpC,MAAgC5B,KAAKJ,MAA7Bc,EAAR,EAAQA,UAAWS,EAAnB,EAAmBA,SAEfS,EAAUlB,YAAcA,GAAaS,GAEvCf,QAAQyB,MAAR,uBAA8BD,EAAUlB,UAAxC,eAAwDA,MAtB9D,kCA0BE,WACE,IAAQU,EAAYpB,KAAZoB,QAEQ,OAAZA,GACFnB,OAAOO,cAAcY,GAGvBK,SAASK,oBAAoB,QAAS9B,KAAKqB,oBAC3CI,SAASK,oBAAoB,cAAe9B,KAAKsB,sBAlCrD,oBA+CE,WACE,MAAgCtB,KAAKJ,MAA7BuB,EAAR,EAAQA,SAAUT,EAAlB,EAAkBA,UAElB,OACE,sBAAKE,UAAU,MAAf,UACE,6CACCO,GAAY,cAAC,EAAD,CAAOT,UAAWA,WArDvC,GAAyBG,aCZzBkB,IAASC,OACP,cAAC,EAAD,IACAP,SAASQ,eAAe,W","file":"static/js/main.7c7e8321.chunk.js","sourcesContent":["import { Component, ReactNode } from 'react';\n\ntype State = {\n  today: Date,\n};\n\ntype Props = {\n  clockName: string,\n};\nexport class Clock extends Component<Props, State> {\n  state = {\n    today: new Date(),\n  };\n\n  clockId: number | null = null;\n\n  componentDidMount() {\n    this.clockId = window.setInterval(() => {\n      this.setState({ today: new Date() });\n\n      // eslint-disable-next-line no-console\n      console.info(this.state.today.toUTCString().slice(-12, -4));\n    }, 1000);\n  }\n\n  componentWillUnmount() {\n    const { clockId } = this;\n\n    if (clockId !== null) {\n      window.clearInterval(clockId);\n\n      this.clockId = null;\n    }\n  }\n\n  render(): ReactNode {\n    const currentTime = this.state.today.toUTCString().slice(-12, -4);\n    const { clockName } = this.props;\n\n    return (\n      <div className=\"Clock\">\n        <strong className=\"Clock__name\">\n          {clockName}\n        </strong>\n\n        {' time is '}\n\n        <span className=\"Clock__time\">\n          {currentTime}\n        </span>\n      </div>\n    );\n  }\n}\n","import { Component, ReactNode } from 'react';\nimport './App.scss';\nimport { Clock } from './Clock';\n\ntype State = {\n  hasClock: boolean,\n  clockName: string,\n};\n\nfunction getRandomName(): string {\n  const value = Date.now().toString().slice(-4);\n\n  return `Clock-${value}`;\n}\n\nexport class App extends Component<{}, State> {\n  state = {\n    hasClock: true,\n    clockName: 'Clock-0',\n  };\n\n  timerId: number | null = null;\n\n  componentDidMount() {\n    this.timerId = window.setInterval(() => {\n      this.setState({ clockName: getRandomName() });\n    }, 3300);\n\n    document.addEventListener('click', this.handleTimerOpening);\n    document.addEventListener('contextmenu', this.handleTimerClosing);\n  }\n\n  componentDidUpdate(_prevProps: never, prevState: State) {\n    const { clockName, hasClock } = this.state;\n\n    if (prevState.clockName !== clockName && hasClock) {\n      // eslint-disable-next-line no-console\n      console.debug(`Renamed from ${prevState.clockName} to ${clockName}`);\n    }\n  }\n\n  componentWillUnmount() {\n    const { timerId } = this;\n\n    if (timerId !== null) {\n      window.clearInterval(timerId);\n    }\n\n    document.removeEventListener('click', this.handleTimerOpening);\n    document.removeEventListener('contextmenu', this.handleTimerClosing);\n  }\n\n  handleTimerOpening = () => {\n    this.setState({ hasClock: true });\n  };\n\n  handleTimerClosing = (event: MouseEvent) => {\n    event.preventDefault();\n\n    this.setState({ hasClock: false });\n  };\n\n  render(): ReactNode {\n    const { hasClock, clockName } = this.state;\n\n    return (\n      <div className=\"App\">\n        <h1>React clock</h1>\n        {hasClock && <Clock clockName={clockName} />}\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}