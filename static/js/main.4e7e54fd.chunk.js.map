{"version":3,"sources":["Components/Clock/Clock.tsx","App.tsx","index.tsx"],"names":["Clock","state","today","Date","clockId","formatDateToUTC","date","toUTCString","slice","this","window","setInterval","setState","console","info","clearInterval","clockName","props","className","Component","getRandomName","value","now","toString","App","hasClock","timerId","handleTimerOpening","handleTimerClosing","event","preventDefault","document","addEventListener","_prevProps","prevState","debug","removeEventListener","ReactDOM","render","getElementById"],"mappings":"6MASaA,EAAb,4MACEC,MAAQ,CACNC,MAAO,IAAIC,MAFf,EAKEC,QAAyB,KAL3B,EA0BEC,gBAAkB,SAACC,GAAD,OAAgBA,EAAKC,cAAcC,OAAO,IAAK,IA1BnE,uDAOE,WAAqB,IAAD,OAClBC,KAAKL,QAAUM,OAAOC,aAAY,WAChC,EAAKC,SAAS,CAAEV,MAAO,IAAIC,OAG3BU,QAAQC,KAAK,EAAKT,gBAAgB,EAAKJ,MAAMC,UAC5C,OAbP,kCAgBE,WACE,IAAQE,EAAYK,KAAZL,QAEQ,OAAZA,IACFM,OAAOK,cAAcX,GAErBK,KAAKL,QAAU,QAtBrB,oBA4BE,WACE,IAAQC,EAAoBI,KAApBJ,gBACAW,EAAcP,KAAKQ,MAAnBD,UAER,OACE,sBAAKE,UAAU,QAAf,UACE,wBAAQA,UAAU,cAAlB,SACGF,IAGF,YAED,sBAAME,UAAU,cAAhB,SACGb,EAAgBI,KAAKR,MAAMC,gBAzCtC,GAA2BiB,aCA3B,SAASC,IACP,IAAMC,EAAQlB,KAAKmB,MAAMC,WAAWf,OAAO,GAE3C,MAAM,SAAN,OAAgBa,GAGX,IAAMG,EAAb,4MACEvB,MAAQ,CACNwB,UAAU,EACVT,UAAW,WAHf,EAMEU,QAAyB,KAN3B,EAqCEC,mBAAqB,WACnB,EAAKf,SAAS,CAAEa,UAAU,KAtC9B,EAyCEG,mBAAqB,SAACC,GACpBA,EAAMC,iBAEN,EAAKlB,SAAS,CAAEa,UAAU,KA5C9B,uDAQE,WAAqB,IAAD,OAClBhB,KAAKiB,QAAUhB,OAAOC,aAAY,WAChC,EAAKC,SAAS,CAAEI,UAAWI,QAC1B,MAEHW,SAASC,iBAAiB,QAASvB,KAAKkB,oBACxCI,SAASC,iBAAiB,cAAevB,KAAKmB,sBAdlD,gCAiBE,SAAmBK,EAAmBC,GACpC,MAAgCzB,KAAKR,MAA7Be,EAAR,EAAQA,UAAWS,EAAnB,EAAmBA,SAEfS,EAAUlB,YAAcA,GAAaS,GAEvCZ,QAAQsB,MAAR,uBAA8BD,EAAUlB,UAAxC,eAAwDA,MAtB9D,kCA0BE,WACE,IAAQU,EAAYjB,KAAZiB,QAEQ,OAAZA,GACFhB,OAAOK,cAAcW,GAGvBK,SAASK,oBAAoB,QAAS3B,KAAKkB,oBAC3CI,SAASK,oBAAoB,cAAe3B,KAAKmB,sBAlCrD,oBA+CE,WACE,MAAgCnB,KAAKR,MAA7BwB,EAAR,EAAQA,SAAUT,EAAlB,EAAkBA,UAElB,OACE,sBAAKE,UAAU,MAAf,UACE,6CACCO,GACC,cAAC,EAAD,CAAOT,UAAWA,WAtD5B,GAAyBG,aCZzBkB,IAASC,OACP,cAAC,EAAD,IACAP,SAASQ,eAAe,W","file":"static/js/main.4e7e54fd.chunk.js","sourcesContent":["import { Component, ReactNode } from 'react';\n\ntype State = {\n  today: Date,\n};\n\ntype Props = {\n  clockName: string,\n};\nexport class Clock extends Component<Props, State> {\n  state = {\n    today: new Date(),\n  };\n\n  clockId: number | null = null;\n\n  componentDidMount() {\n    this.clockId = window.setInterval(() => {\n      this.setState({ today: new Date() });\n\n      // eslint-disable-next-line no-console\n      console.info(this.formatDateToUTC(this.state.today));\n    }, 1000);\n  }\n\n  componentWillUnmount() {\n    const { clockId } = this;\n\n    if (clockId !== null) {\n      window.clearInterval(clockId);\n\n      this.clockId = null;\n    }\n  }\n\n  formatDateToUTC = (date: Date) => date.toUTCString().slice(-12, -4);\n\n  render(): ReactNode {\n    const { formatDateToUTC } = this;\n    const { clockName } = this.props;\n\n    return (\n      <div className=\"Clock\">\n        <strong className=\"Clock__name\">\n          {clockName}\n        </strong>\n\n        {' time is '}\n\n        <span className=\"Clock__time\">\n          {formatDateToUTC(this.state.today)}\n        </span>\n      </div>\n    );\n  }\n}\n","import { Component, ReactNode } from 'react';\nimport './App.scss';\nimport { Clock } from './Components/Clock';\n\ntype State = {\n  hasClock: boolean,\n  clockName: string,\n};\n\nfunction getRandomName(): string {\n  const value = Date.now().toString().slice(-4);\n\n  return `Clock-${value}`;\n}\n\nexport class App extends Component<{}, State> {\n  state = {\n    hasClock: true,\n    clockName: 'Clock-0',\n  };\n\n  timerId: number | null = null;\n\n  componentDidMount() {\n    this.timerId = window.setInterval(() => {\n      this.setState({ clockName: getRandomName() });\n    }, 3300);\n\n    document.addEventListener('click', this.handleTimerOpening);\n    document.addEventListener('contextmenu', this.handleTimerClosing);\n  }\n\n  componentDidUpdate(_prevProps: never, prevState: State) {\n    const { clockName, hasClock } = this.state;\n\n    if (prevState.clockName !== clockName && hasClock) {\n      // eslint-disable-next-line no-console\n      console.debug(`Renamed from ${prevState.clockName} to ${clockName}`);\n    }\n  }\n\n  componentWillUnmount() {\n    const { timerId } = this;\n\n    if (timerId !== null) {\n      window.clearInterval(timerId);\n    }\n\n    document.removeEventListener('click', this.handleTimerOpening);\n    document.removeEventListener('contextmenu', this.handleTimerClosing);\n  }\n\n  handleTimerOpening = () => {\n    this.setState({ hasClock: true });\n  };\n\n  handleTimerClosing = (event: MouseEvent) => {\n    event.preventDefault();\n\n    this.setState({ hasClock: false });\n  };\n\n  render(): ReactNode {\n    const { hasClock, clockName } = this.state;\n\n    return (\n      <div className=\"App\">\n        <h1>React clock</h1>\n        {hasClock && (\n          <Clock clockName={clockName} />\n        )}\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}